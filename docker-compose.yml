version: '2'
services:
  db:
    image: postgres:alpine

  minio:
    image: minio/minio
    entrypoint: sh
    command: -c 'mkdir -p /buckets/reconfigureio-builds && mkdir -p /buckets/testbucket.reconfigure.io && /usr/bin/minio server /buckets'
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
      - MINIO_DOMAIN=minio
    ports:
      - "9000:9000" 

  web-base:
    build: build
    working_dir: /go/src/github.com/ReconfigureIO/platform
    volumes:
      - .:/go/src/github.com/ReconfigureIO/platform
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - S3_ENDPOINT=http://minio:9000/
      - RECO_AWS_ENDPOINT=http://fake-batch:9090
      - AWS_REGION
      - RECO_INTERCOM_ACCESS_TOKEN
      - LOGZIO_TOKEN
      - GITHUB_CLIENT_ID=c405f7d899fa411aaa69
      - GITHUB_CLIENT_SECRET=0105d6cd1bea780f5ecf651351f2579277f80b14
      - DATABASE_URL=host=db user=postgres dbname=postgres sslmode=disable password=mysecretpassword
      - PORT=8080
      - RECO_PLATFORM_MIGRATE=1
      - RECO_FEATURE_BILLING=1
      - RECO_FEATURE_DEPLOY=1
      - RECO_ENV=development
      - STRIPE_KEY=sk_test_NvEpeLnLAV15b9TWJzZKLkvW
      - RECO_HOST_NAME=local.reconfigure.io
      - RECO_FEATURE_DEP_QUEUE=1
      - RECO_DEPLOY_AMI=ami-43338239
      - RECO_DEPLOY_SUBNET=subnet-b0ca3aed
      - RECO_DEPLOY_SG=sg-b03e38c2
      - RECO_PUBLIC_PROJECT_ID=a95550bf-bffa-42df-b100-872501940c5c

  fake-batch:
    extends: web-base
    ports:
      - "9090:9090"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - web-base
      - minio
    links:
      - minio:reconfigureio-builds.minio
    command: bash -c "make clean fake-batch && ./dist-image/dist/fake-batch"

  test:
    extends: web-base
    depends_on:
      - db
      - minio
      - web-base
    links:
      - db
      - minio:reconfigureio-builds.minio
      - minio:testbucket.reconfigure.io.minio
  web:
    command: bash -c "fresh"
    extends: web-base
    ports:
      - "8080:8080"
    depends_on:
      - db
      - minio
      - fake-batch
      - web-base
    links:
      - db
      - fake-batch
      - minio:reconfigureio-builds.minio

  cron:
    extends: web-base
    ports:
      - "8000:8080"
    depends_on:
      - db
      - web
      - web-base
    links:
      - db
    command: bash -c "make clean cron && ./dist-image/dist/worker"
