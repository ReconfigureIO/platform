version: '2'

volumes:
  glide-cache: {}


services:
  db:
    image: postgres:alpine
    networks:
      - platform

  web-base:
    build: build
    working_dir: /go/src/github.com/ReconfigureIO/platform
    volumes:
      - .:/go/src/github.com/ReconfigureIO/platform
      - glide-cache:/root/.glide
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
      - RECO_INTERCOM_ACCESS_TOKEN
      - LOGZIO_TOKEN
      - GITHUB_CLIENT_ID=c405f7d899fa411aaa69
      - GITHUB_CLIENT_SECRET=0105d6cd1bea780f5ecf651351f2579277f80b14
      - DATABASE_URL=host=db user=postgres dbname=postgres sslmode=disable password=mysecretpassword
      - PORT=8080
      - RECO_PLATFORM_MIGRATE=1
      - RECO_FEATURE_BILLING=1
      - RECO_FEATURE_DEPLOY=1
      - RECO_ENV=development
      - STRIPE_KEY=sk_test_NvEpeLnLAV15b9TWJzZKLkvW
      - RECO_HOST_NAME=local.reconfigure.io
      - RECO_FEATURE_DEP_QUEUE=1
      - RECO_DEPLOY_AMI=ami-43338239
      - RECO_DEPLOY_SUBNET=subnet-b0ca3aed
      - RECO_DEPLOY_SG=sg-b03e38c2
      - RECO_PUBLIC_PROJECT_ID=a95550bf-bffa-42df-b100-872501940c5c

  test:
    extends: web-base
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - web-base
    networks:
      - platform

  web:
    command: bash -c "fresh"
    extends: web-base
    ports:
      - "8080:8080"
    depends_on:
      - db
      - web-base
    networks:
      platform:
        aliases:
          - local.reconfigure.io

  cron:
    extends: web-base
    ports:
      - "8000:8080"
    depends_on:
      - db
      - web
      - web-base
    networks:
      - platform
    command: bash -c "make clean dist-image/dist/cron && ./dist-image/dist/cron cron"


networks:
  platform:
    driver: bridge
    driver_opts:
      name: "platform"